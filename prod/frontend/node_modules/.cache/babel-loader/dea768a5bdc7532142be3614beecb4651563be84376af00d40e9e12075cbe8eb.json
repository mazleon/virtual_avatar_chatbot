{"ast":null,"code":"var _jsxFileName = \"/Users/saniyasultanatuba/Downloads/Python-dev/llm/video_agent/prod/frontend/src/SimpleApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './index.css';\n\n// API endpoint configuration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5000';\nfunction SimpleApp() {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [messages, setMessages] = useState([{\n    sender: 'System',\n    text: 'Welcome to the Voice Agent demo. Click \"Start Recording\" to begin.'\n  }]);\n  const [audioStream, setAudioStream] = useState(null);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [audioChunks, setAudioChunks] = useState([]);\n  const [apiStatus, setApiStatus] = useState('unknown');\n  const [recordingTime, setRecordingTime] = useState(0);\n  const [volume, setVolume] = useState(0);\n  const timerRef = useRef(null);\n  const animationRef = useRef(null);\n  const audioAnalyserRef = useRef(null);\n  const audioDataRef = useRef(null);\n  const messagesEndRef = useRef(null);\n\n  // Check API connection on mount\n  useEffect(() => {\n    checkApiConnection();\n    return () => {\n      // Clean up on unmount\n      if (timerRef.current) clearInterval(timerRef.current);\n      if (animationRef.current) cancelAnimationFrame(animationRef.current);\n      if (audioStream) {\n        audioStream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n\n  // Auto-scroll to the bottom of messages\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Check if the API server is running\n  const checkApiConnection = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/health`);\n      if (response.ok) {\n        setApiStatus('connected');\n        addMessage('System', 'Connected to API server successfully.');\n      } else {\n        setApiStatus('error');\n        addMessage('System', 'Error connecting to API server. Check if it\\'s running.');\n      }\n    } catch (err) {\n      console.error('API connection error:', err);\n      setApiStatus('error');\n      addMessage('System', `Error connecting to API server: ${err.message}. Make sure the server is running at ${API_BASE_URL}`);\n    }\n  };\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      setAudioStream(stream);\n      const recorder = new MediaRecorder(stream);\n      setMediaRecorder(recorder);\n      const chunks = [];\n      setAudioChunks(chunks);\n      recorder.ondataavailable = e => {\n        chunks.push(e.data);\n      };\n      recorder.onstop = async () => {\n        const audioBlob = new Blob(chunks, {\n          type: 'audio/wav'\n        });\n        await processAudio(audioBlob);\n      };\n      recorder.start();\n      setIsRecording(true);\n      addMessage('System', 'Recording started. Speak now...');\n    } catch (err) {\n      console.error('Error starting recording:', err);\n      addMessage('System', `Error starting recording: ${err.message}`);\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorder && isRecording) {\n      mediaRecorder.stop();\n      setIsRecording(false);\n\n      // Stop all audio tracks\n      if (audioStream) {\n        audioStream.getTracks().forEach(track => track.stop());\n      }\n      addMessage('System', 'Recording stopped. Processing audio...');\n    }\n  };\n  const processAudio = async audioBlob => {\n    try {\n      addMessage('System', 'Processing audio...');\n\n      // Create a FormData object to send the audio file\n      const formData = new FormData();\n      formData.append('audio', audioBlob);\n\n      // Send the audio to the backend for processing\n      const response = await fetch('http://localhost:5000/api/process-audio', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to process audio');\n      }\n      const data = await response.json();\n\n      // Add user message with transcribed text\n      addMessage('User', data.user_text);\n\n      // Add agent response\n      addMessage('Agent', data.response_text);\n\n      // Play the audio response\n      if (data.audio_path) {\n        const audioUrl = `http://localhost:5000${data.audio_path}`;\n        playAudioFromUrl(audioUrl);\n      }\n    } catch (err) {\n      console.error('Error processing audio:', err);\n      addMessage('System', `Error processing audio: ${err.message}`);\n    }\n  };\n  const playAudioFromUrl = url => {\n    // Create an audio element to play the response\n    const audio = new Audio(url);\n\n    // Add event listeners\n    audio.addEventListener('play', () => {\n      addMessage('System', 'Playing audio response...');\n    });\n    audio.addEventListener('ended', () => {\n      addMessage('System', 'Audio response finished.');\n    });\n    audio.addEventListener('error', e => {\n      console.error('Error playing audio:', e);\n      addMessage('System', 'Error playing audio response.');\n    });\n\n    // Play the audio\n    audio.play().catch(err => {\n      console.error('Error playing audio:', err);\n      addMessage('System', `Error playing audio: ${err.message}`);\n    });\n  };\n  const addMessage = (sender, text) => {\n    setMessages(prev => [...prev, {\n      sender,\n      text,\n      timestamp: new Date()\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Voice Agent Demo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"subtitle\",\n        children: \"Talk with an AI voice assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: !isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: startRecording,\n          children: \"Start Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: stopRecording,\n          children: \"Stop Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `status ${isRecording ? 'connected' : 'disconnected'}`,\n        children: [\"Status: \", isRecording ? 'Recording' : 'Not Recording']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Conversation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcript\",\n        children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.sender.toLowerCase() === 'user' ? 'user' : msg.sender.toLowerCase() === 'agent' ? 'agent' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-sender\",\n            children: msg.sender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"message-text\",\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n}\n_s(SimpleApp, \"Br6clnav4jdznMUnl3YXufcp/Mw=\");\n_c = SimpleApp;\nexport default SimpleApp;\nvar _c;\n$RefreshReg$(_c, \"SimpleApp\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","API_BASE_URL","SimpleApp","_s","isRecording","setIsRecording","isProcessing","setIsProcessing","messages","setMessages","sender","text","audioStream","setAudioStream","mediaRecorder","setMediaRecorder","audioChunks","setAudioChunks","apiStatus","setApiStatus","recordingTime","setRecordingTime","volume","setVolume","timerRef","animationRef","audioAnalyserRef","audioDataRef","messagesEndRef","checkApiConnection","current","clearInterval","cancelAnimationFrame","getTracks","forEach","track","stop","_messagesEndRef$curre","scrollIntoView","behavior","response","fetch","ok","addMessage","err","console","error","message","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","recorder","MediaRecorder","chunks","ondataavailable","e","push","data","onstop","audioBlob","Blob","type","processAudio","start","stopRecording","formData","FormData","append","method","body","errorData","json","Error","user_text","response_text","audio_path","audioUrl","playAudioFromUrl","url","Audio","addEventListener","play","catch","prev","timestamp","Date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","msg","idx","toLowerCase","_c","$RefreshReg$"],"sources":["/Users/saniyasultanatuba/Downloads/Python-dev/llm/video_agent/prod/frontend/src/SimpleApp.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './index.css';\n\n// API endpoint configuration\nconst API_BASE_URL = 'http://localhost:5000';\n\nfunction SimpleApp() {\n  const [isRecording, setIsRecording] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [messages, setMessages] = useState([\n    { sender: 'System', text: 'Welcome to the Voice Agent demo. Click \"Start Recording\" to begin.' }\n  ]);\n  const [audioStream, setAudioStream] = useState(null);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [audioChunks, setAudioChunks] = useState([]);\n  const [apiStatus, setApiStatus] = useState('unknown');\n  const [recordingTime, setRecordingTime] = useState(0);\n  const [volume, setVolume] = useState(0);\n  const timerRef = useRef(null);\n  const animationRef = useRef(null);\n  const audioAnalyserRef = useRef(null);\n  const audioDataRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  \n  // Check API connection on mount\n  useEffect(() => {\n    checkApiConnection();\n    return () => {\n      // Clean up on unmount\n      if (timerRef.current) clearInterval(timerRef.current);\n      if (animationRef.current) cancelAnimationFrame(animationRef.current);\n      if (audioStream) {\n        audioStream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n  \n  // Auto-scroll to the bottom of messages\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n  \n  // Check if the API server is running\n  const checkApiConnection = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/health`);\n      if (response.ok) {\n        setApiStatus('connected');\n        addMessage('System', 'Connected to API server successfully.');\n      } else {\n        setApiStatus('error');\n        addMessage('System', 'Error connecting to API server. Check if it\\'s running.');\n      }\n    } catch (err) {\n      console.error('API connection error:', err);\n      setApiStatus('error');\n      addMessage('System', `Error connecting to API server: ${err.message}. Make sure the server is running at ${API_BASE_URL}`);\n    }\n  };\n\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      setAudioStream(stream);\n      \n      const recorder = new MediaRecorder(stream);\n      setMediaRecorder(recorder);\n      \n      const chunks = [];\n      setAudioChunks(chunks);\n      \n      recorder.ondataavailable = (e) => {\n        chunks.push(e.data);\n      };\n      \n      recorder.onstop = async () => {\n        const audioBlob = new Blob(chunks, { type: 'audio/wav' });\n        await processAudio(audioBlob);\n      };\n      \n      recorder.start();\n      setIsRecording(true);\n      \n      addMessage('System', 'Recording started. Speak now...');\n    } catch (err) {\n      console.error('Error starting recording:', err);\n      addMessage('System', `Error starting recording: ${err.message}`);\n    }\n  };\n\n  const stopRecording = () => {\n    if (mediaRecorder && isRecording) {\n      mediaRecorder.stop();\n      setIsRecording(false);\n      \n      // Stop all audio tracks\n      if (audioStream) {\n        audioStream.getTracks().forEach(track => track.stop());\n      }\n      \n      addMessage('System', 'Recording stopped. Processing audio...');\n    }\n  };\n\n  const processAudio = async (audioBlob) => {\n    try {\n      addMessage('System', 'Processing audio...');\n      \n      // Create a FormData object to send the audio file\n      const formData = new FormData();\n      formData.append('audio', audioBlob);\n      \n      // Send the audio to the backend for processing\n      const response = await fetch('http://localhost:5000/api/process-audio', {\n        method: 'POST',\n        body: formData,\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to process audio');\n      }\n      \n      const data = await response.json();\n      \n      // Add user message with transcribed text\n      addMessage('User', data.user_text);\n      \n      // Add agent response\n      addMessage('Agent', data.response_text);\n      \n      // Play the audio response\n      if (data.audio_path) {\n        const audioUrl = `http://localhost:5000${data.audio_path}`;\n        playAudioFromUrl(audioUrl);\n      }\n      \n    } catch (err) {\n      console.error('Error processing audio:', err);\n      addMessage('System', `Error processing audio: ${err.message}`);\n    }\n  };\n\n  const playAudioFromUrl = (url) => {\n    // Create an audio element to play the response\n    const audio = new Audio(url);\n    \n    // Add event listeners\n    audio.addEventListener('play', () => {\n      addMessage('System', 'Playing audio response...');\n    });\n    \n    audio.addEventListener('ended', () => {\n      addMessage('System', 'Audio response finished.');\n    });\n    \n    audio.addEventListener('error', (e) => {\n      console.error('Error playing audio:', e);\n      addMessage('System', 'Error playing audio response.');\n    });\n    \n    // Play the audio\n    audio.play().catch(err => {\n      console.error('Error playing audio:', err);\n      addMessage('System', `Error playing audio: ${err.message}`);\n    });\n  };\n\n  const addMessage = (sender, text) => {\n    setMessages(prev => [...prev, { sender, text, timestamp: new Date() }]);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <h1 className=\"title\">Voice Agent Demo</h1>\n        <h2 className=\"subtitle\">Talk with an AI voice assistant</h2>\n      </div>\n\n      <div className=\"card\">\n        <div className=\"controls\">\n          {!isRecording ? (\n            <button \n              className=\"button\" \n              onClick={startRecording}\n            >\n              Start Recording\n            </button>\n          ) : (\n            <button \n              className=\"button\" \n              onClick={stopRecording}\n            >\n              Stop Recording\n            </button>\n          )}\n        </div>\n        \n        <div className={`status ${isRecording ? 'connected' : 'disconnected'}`}>\n          Status: {isRecording ? 'Recording' : 'Not Recording'}\n        </div>\n      </div>\n\n      <div className=\"card\">\n        <h3>Conversation</h3>\n        <div className=\"transcript\">\n          {messages.map((msg, idx) => (\n            <div \n              key={idx} \n              className={`message ${msg.sender.toLowerCase() === 'user' ? 'user' : \n                           msg.sender.toLowerCase() === 'agent' ? 'agent' : ''}`}\n            >\n              <div className=\"message-sender\">{msg.sender}</div>\n              <p className=\"message-text\">{msg.text}</p>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SimpleApp;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,aAAa;;AAEpB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAG,uBAAuB;AAE5C,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,CACvC;IAAEc,MAAM,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAqE,CAAC,CACjG,CAAC;EACF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACkB,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,SAAS,CAAC;EACrD,MAAM,CAACwB,aAAa,EAAEC,gBAAgB,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAAC0B,MAAM,EAAEC,SAAS,CAAC,GAAG3B,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM4B,QAAQ,GAAG1B,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM2B,YAAY,GAAG3B,MAAM,CAAC,IAAI,CAAC;EACjC,MAAM4B,gBAAgB,GAAG5B,MAAM,CAAC,IAAI,CAAC;EACrC,MAAM6B,YAAY,GAAG7B,MAAM,CAAC,IAAI,CAAC;EACjC,MAAM8B,cAAc,GAAG9B,MAAM,CAAC,IAAI,CAAC;;EAEnC;EACAD,SAAS,CAAC,MAAM;IACdgC,kBAAkB,CAAC,CAAC;IACpB,OAAO,MAAM;MACX;MACA,IAAIL,QAAQ,CAACM,OAAO,EAAEC,aAAa,CAACP,QAAQ,CAACM,OAAO,CAAC;MACrD,IAAIL,YAAY,CAACK,OAAO,EAAEE,oBAAoB,CAACP,YAAY,CAACK,OAAO,CAAC;MACpE,IAAIlB,WAAW,EAAE;QACfA,WAAW,CAACqB,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;MACxD;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAvC,SAAS,CAAC,MAAM;IAAA,IAAAwC,qBAAA;IACd,CAAAA,qBAAA,GAAAT,cAAc,CAACE,OAAO,cAAAO,qBAAA,uBAAtBA,qBAAA,CAAwBC,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC,EAAE,CAAC/B,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMqB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGxC,YAAY,SAAS,CAAC;MACtD,IAAIuC,QAAQ,CAACE,EAAE,EAAE;QACfvB,YAAY,CAAC,WAAW,CAAC;QACzBwB,UAAU,CAAC,QAAQ,EAAE,uCAAuC,CAAC;MAC/D,CAAC,MAAM;QACLxB,YAAY,CAAC,OAAO,CAAC;QACrBwB,UAAU,CAAC,QAAQ,EAAE,yDAAyD,CAAC;MACjF;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;MAC3CzB,YAAY,CAAC,OAAO,CAAC;MACrBwB,UAAU,CAAC,QAAQ,EAAE,mCAAmCC,GAAG,CAACG,OAAO,wCAAwC9C,YAAY,EAAE,CAAC;IAC5H;EACF,CAAC;EAED,MAAM+C,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QAAEC,KAAK,EAAE;MAAK,CAAC,CAAC;MACzExC,cAAc,CAACoC,MAAM,CAAC;MAEtB,MAAMK,QAAQ,GAAG,IAAIC,aAAa,CAACN,MAAM,CAAC;MAC1ClC,gBAAgB,CAACuC,QAAQ,CAAC;MAE1B,MAAME,MAAM,GAAG,EAAE;MACjBvC,cAAc,CAACuC,MAAM,CAAC;MAEtBF,QAAQ,CAACG,eAAe,GAAIC,CAAC,IAAK;QAChCF,MAAM,CAACG,IAAI,CAACD,CAAC,CAACE,IAAI,CAAC;MACrB,CAAC;MAEDN,QAAQ,CAACO,MAAM,GAAG,YAAY;QAC5B,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACP,MAAM,EAAE;UAAEQ,IAAI,EAAE;QAAY,CAAC,CAAC;QACzD,MAAMC,YAAY,CAACH,SAAS,CAAC;MAC/B,CAAC;MAEDR,QAAQ,CAACY,KAAK,CAAC,CAAC;MAChB7D,cAAc,CAAC,IAAI,CAAC;MAEpBsC,UAAU,CAAC,QAAQ,EAAE,iCAAiC,CAAC;IACzD,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,GAAG,CAAC;MAC/CD,UAAU,CAAC,QAAQ,EAAE,6BAA6BC,GAAG,CAACG,OAAO,EAAE,CAAC;IAClE;EACF,CAAC;EAED,MAAMoB,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIrD,aAAa,IAAIV,WAAW,EAAE;MAChCU,aAAa,CAACsB,IAAI,CAAC,CAAC;MACpB/B,cAAc,CAAC,KAAK,CAAC;;MAErB;MACA,IAAIO,WAAW,EAAE;QACfA,WAAW,CAACqB,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;MACxD;MAEAO,UAAU,CAAC,QAAQ,EAAE,wCAAwC,CAAC;IAChE;EACF,CAAC;EAED,MAAMsB,YAAY,GAAG,MAAOH,SAAS,IAAK;IACxC,IAAI;MACFnB,UAAU,CAAC,QAAQ,EAAE,qBAAqB,CAAC;;MAE3C;MACA,MAAMyB,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAER,SAAS,CAAC;;MAEnC;MACA,MAAMtB,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;QACtE8B,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEJ;MACR,CAAC,CAAC;MAEF,IAAI,CAAC5B,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM+B,SAAS,GAAG,MAAMjC,QAAQ,CAACkC,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAAC3B,KAAK,IAAI,yBAAyB,CAAC;MAC/D;MAEA,MAAMc,IAAI,GAAG,MAAMpB,QAAQ,CAACkC,IAAI,CAAC,CAAC;;MAElC;MACA/B,UAAU,CAAC,MAAM,EAAEiB,IAAI,CAACgB,SAAS,CAAC;;MAElC;MACAjC,UAAU,CAAC,OAAO,EAAEiB,IAAI,CAACiB,aAAa,CAAC;;MAEvC;MACA,IAAIjB,IAAI,CAACkB,UAAU,EAAE;QACnB,MAAMC,QAAQ,GAAG,wBAAwBnB,IAAI,CAACkB,UAAU,EAAE;QAC1DE,gBAAgB,CAACD,QAAQ,CAAC;MAC5B;IAEF,CAAC,CAAC,OAAOnC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;MAC7CD,UAAU,CAAC,QAAQ,EAAE,2BAA2BC,GAAG,CAACG,OAAO,EAAE,CAAC;IAChE;EACF,CAAC;EAED,MAAMiC,gBAAgB,GAAIC,GAAG,IAAK;IAChC;IACA,MAAM5B,KAAK,GAAG,IAAI6B,KAAK,CAACD,GAAG,CAAC;;IAE5B;IACA5B,KAAK,CAAC8B,gBAAgB,CAAC,MAAM,EAAE,MAAM;MACnCxC,UAAU,CAAC,QAAQ,EAAE,2BAA2B,CAAC;IACnD,CAAC,CAAC;IAEFU,KAAK,CAAC8B,gBAAgB,CAAC,OAAO,EAAE,MAAM;MACpCxC,UAAU,CAAC,QAAQ,EAAE,0BAA0B,CAAC;IAClD,CAAC,CAAC;IAEFU,KAAK,CAAC8B,gBAAgB,CAAC,OAAO,EAAGzB,CAAC,IAAK;MACrCb,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEY,CAAC,CAAC;MACxCf,UAAU,CAAC,QAAQ,EAAE,+BAA+B,CAAC;IACvD,CAAC,CAAC;;IAEF;IACAU,KAAK,CAAC+B,IAAI,CAAC,CAAC,CAACC,KAAK,CAACzC,GAAG,IAAI;MACxBC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC;MAC1CD,UAAU,CAAC,QAAQ,EAAE,wBAAwBC,GAAG,CAACG,OAAO,EAAE,CAAC;IAC7D,CAAC,CAAC;EACJ,CAAC;EAED,MAAMJ,UAAU,GAAGA,CAACjC,MAAM,EAAEC,IAAI,KAAK;IACnCF,WAAW,CAAC6E,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAAE5E,MAAM;MAAEC,IAAI;MAAE4E,SAAS,EAAE,IAAIC,IAAI,CAAC;IAAE,CAAC,CAAC,CAAC;EACzE,CAAC;EAED,oBACExF,OAAA;IAAKyF,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB1F,OAAA;MAAKyF,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrB1F,OAAA;QAAIyF,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3C9F,OAAA;QAAIyF,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAC;MAA+B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,eAEN9F,OAAA;MAAKyF,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnB1F,OAAA;QAAKyF,SAAS,EAAC,UAAU;QAAAC,QAAA,EACtB,CAACtF,WAAW,gBACXJ,OAAA;UACEyF,SAAS,EAAC,QAAQ;UAClBM,OAAO,EAAE/C,cAAe;UAAA0C,QAAA,EACzB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,gBAET9F,OAAA;UACEyF,SAAS,EAAC,QAAQ;UAClBM,OAAO,EAAE5B,aAAc;UAAAuB,QAAA,EACxB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MACT;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAEN9F,OAAA;QAAKyF,SAAS,EAAE,UAAUrF,WAAW,GAAG,WAAW,GAAG,cAAc,EAAG;QAAAsF,QAAA,GAAC,UAC9D,EAACtF,WAAW,GAAG,WAAW,GAAG,eAAe;MAAA;QAAAuF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN9F,OAAA;MAAKyF,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnB1F,OAAA;QAAA0F,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrB9F,OAAA;QAAKyF,SAAS,EAAC,YAAY;QAAAC,QAAA,EACxBlF,QAAQ,CAACwF,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,kBACrBlG,OAAA;UAEEyF,SAAS,EAAE,WAAWQ,GAAG,CAACvF,MAAM,CAACyF,WAAW,CAAC,CAAC,KAAK,MAAM,GAAG,MAAM,GACrDF,GAAG,CAACvF,MAAM,CAACyF,WAAW,CAAC,CAAC,KAAK,OAAO,GAAG,OAAO,GAAG,EAAE,EAAG;UAAAT,QAAA,gBAEnE1F,OAAA;YAAKyF,SAAS,EAAC,gBAAgB;YAAAC,QAAA,EAAEO,GAAG,CAACvF;UAAM;YAAAiF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAClD9F,OAAA;YAAGyF,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAEO,GAAG,CAACtF;UAAI;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GALrCI,GAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAML,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC3F,EAAA,CAtNQD,SAAS;AAAAkG,EAAA,GAATlG,SAAS;AAwNlB,eAAeA,SAAS;AAAC,IAAAkG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}