{"ast":null,"code":"var _jsxFileName = \"/Users/saniyasultanatuba/Downloads/Python-dev/llm/video_agent/prod/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Room, RoomEvent } from 'livekit-client';\nimport '@livekit/components-styles';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [roomName, setRoomName] = useState('agent-room');\n  const [token, setToken] = useState('');\n  const [room, setRoom] = useState(null);\n  const [connectionState, setConnectionState] = useState('disconnected');\n  const [messages, setMessages] = useState([]);\n  const [isMicrophoneActive, setIsMicrophoneActive] = useState(false);\n\n  // Fetch token from server\n  const fetchToken = async () => {\n    try {\n      const response = await fetch(`http://localhost:8000/get-token?room=${roomName}&identity=user`);\n      const data = await response.json();\n      if (data.token) {\n        setToken(data.token);\n        return data.token;\n      } else {\n        throw new Error('No token received');\n      }\n    } catch (e) {\n      console.error('Error fetching token:', e);\n      // Fallback to hardcoded token for testing - this token is generated with the new secret\n      const fallbackToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MTY2NzY4MDAsImlzcyI6ImRldmtleSIsIm5hbWUiOiJVc2VyIiwibmJmIjoxNzE2NTkwNDAwLCJzdWIiOiJ1c2VyIiwidmlkZW8iOnsicm9vbSI6ImFnZW50LXJvb20iLCJyb29tSm9pbiI6dHJ1ZX19.mNrTj8NqIJj_hSQ9MQgxoOJm8rlF_EfYR78xo7K4Ym0';\n      setToken(fallbackToken);\n      return fallbackToken;\n    }\n  };\n  const addMessage = (sender, text) => {\n    setMessages(prev => [...prev, {\n      sender,\n      text,\n      timestamp: new Date()\n    }]);\n  };\n  const handleConnect = async () => {\n    setConnectionState('connecting');\n    try {\n      // Get token if not already available\n      const currentToken = token || (await fetchToken());\n\n      // Create a new room\n      const newRoom = new Room({\n        adaptiveStream: true,\n        dynacast: true,\n        publishDefaults: {\n          simulcast: true,\n          audioEnabled: isMicrophoneActive\n        }\n      });\n\n      // Set up event listeners\n      newRoom.on(RoomEvent.ParticipantConnected, participant => {\n        addMessage('System', `${participant.identity} joined the room`);\n      });\n      newRoom.on(RoomEvent.ParticipantDisconnected, participant => {\n        addMessage('System', `${participant.identity} left the room`);\n      });\n      newRoom.on(RoomEvent.Disconnected, () => {\n        setConnectionState('disconnected');\n        addMessage('System', 'Disconnected from room');\n      });\n      newRoom.on(RoomEvent.TrackSubscribed, (track, publication, participant) => {\n        addMessage('System', `Subscribed to ${track.kind} track from ${participant.identity}`);\n\n        // Attach audio track to audio element\n        if (track.kind === 'audio') {\n          const audioElement = document.createElement('audio');\n          audioElement.id = `audio-${participant.identity}-${track.sid}`;\n          audioElement.autoplay = true;\n          document.getElementById('audio-container').appendChild(audioElement);\n          track.attach(audioElement);\n        }\n      });\n\n      // Connect to the room\n      await newRoom.connect('wss://robiassistant-f38d9mhx.livekit.cloud', currentToken);\n      setRoom(newRoom);\n      setConnectionState('connected');\n      addMessage('System', 'Connected to room. You can now speak with the agent.');\n\n      // Enable microphone if needed\n      if (isMicrophoneActive) {\n        await newRoom.localParticipant.setMicrophoneEnabled(true);\n      }\n    } catch (e) {\n      console.error('Connection error:', e);\n      setConnectionState('disconnected');\n      addMessage('System', `Connection error: ${e.message}`);\n    }\n  };\n  const handleDisconnect = () => {\n    if (room) {\n      room.disconnect();\n      setRoom(null);\n    }\n    setConnectionState('disconnected');\n  };\n  const toggleMicrophone = async () => {\n    const newState = !isMicrophoneActive;\n    setIsMicrophoneActive(newState);\n    if (room && room.localParticipant) {\n      try {\n        await room.localParticipant.setMicrophoneEnabled(newState);\n        addMessage('System', newState ? 'Microphone enabled' : 'Microphone disabled');\n      } catch (e) {\n        console.error('Error toggling microphone:', e);\n        addMessage('System', `Error toggling microphone: ${e.message}`);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"LiveKit Voice Agent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"subtitle\",\n        children: \"Talk with an AI voice assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"room-name\",\n            children: \"Room Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"room-name\",\n            type: \"text\",\n            value: roomName,\n            onChange: e => setRoomName(e.target.value),\n            disabled: connectionState === 'connected'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: connectionState !== 'connected' ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: handleConnect,\n            disabled: connectionState === 'connecting',\n            children: connectionState === 'connecting' ? 'Connecting...' : 'Connect'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button\",\n              onClick: toggleMicrophone,\n              children: isMicrophoneActive ? 'Mute Microphone' : 'Unmute Microphone'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button\",\n              onClick: handleDisconnect,\n              children: \"Disconnect\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `status ${connectionState}`,\n          children: [\"Status: \", connectionState.charAt(0).toUpperCase() + connectionState.slice(1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"audio-container\",\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Conversation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcript\",\n        children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No messages yet. Connect to the room and start speaking.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this) : messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.sender.toLowerCase() === 'user' ? 'user' : msg.sender.toLowerCase() === 'agent' ? 'agent' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-sender\",\n            children: msg.sender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"message-text\",\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rCWbGyyMmklaAWPSe4Iaea4iZME=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Room","RoomEvent","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","roomName","setRoomName","token","setToken","room","setRoom","connectionState","setConnectionState","messages","setMessages","isMicrophoneActive","setIsMicrophoneActive","fetchToken","response","fetch","data","json","Error","e","console","error","fallbackToken","addMessage","sender","text","prev","timestamp","Date","handleConnect","currentToken","newRoom","adaptiveStream","dynacast","publishDefaults","simulcast","audioEnabled","on","ParticipantConnected","participant","identity","ParticipantDisconnected","Disconnected","TrackSubscribed","track","publication","kind","audioElement","document","createElement","id","sid","autoplay","getElementById","appendChild","attach","connect","localParticipant","setMicrophoneEnabled","message","handleDisconnect","disconnect","toggleMicrophone","newState","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","value","onChange","target","disabled","onClick","charAt","toUpperCase","slice","style","display","length","map","msg","idx","toLowerCase","_c","$RefreshReg$"],"sources":["/Users/saniyasultanatuba/Downloads/Python-dev/llm/video_agent/prod/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Room, RoomEvent } from 'livekit-client';\nimport '@livekit/components-styles';\n\nfunction App() {\n  const [roomName, setRoomName] = useState('agent-room');\n  const [token, setToken] = useState('');\n  const [room, setRoom] = useState(null);\n  const [connectionState, setConnectionState] = useState('disconnected');\n  const [messages, setMessages] = useState([]);\n  const [isMicrophoneActive, setIsMicrophoneActive] = useState(false);\n\n  // Fetch token from server\n  const fetchToken = async () => {\n    try {\n      const response = await fetch(`http://localhost:8000/get-token?room=${roomName}&identity=user`);\n      const data = await response.json();\n      if (data.token) {\n        setToken(data.token);\n        return data.token;\n      } else {\n        throw new Error('No token received');\n      }\n    } catch (e) {\n      console.error('Error fetching token:', e);\n      // Fallback to hardcoded token for testing - this token is generated with the new secret\n      const fallbackToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MTY2NzY4MDAsImlzcyI6ImRldmtleSIsIm5hbWUiOiJVc2VyIiwibmJmIjoxNzE2NTkwNDAwLCJzdWIiOiJ1c2VyIiwidmlkZW8iOnsicm9vbSI6ImFnZW50LXJvb20iLCJyb29tSm9pbiI6dHJ1ZX19.mNrTj8NqIJj_hSQ9MQgxoOJm8rlF_EfYR78xo7K4Ym0';\n      setToken(fallbackToken);\n      return fallbackToken;\n    }\n  };\n\n  const addMessage = (sender, text) => {\n    setMessages(prev => [...prev, { sender, text, timestamp: new Date() }]);\n  };\n\n  const handleConnect = async () => {\n    setConnectionState('connecting');\n    try {\n      // Get token if not already available\n      const currentToken = token || await fetchToken();\n      \n      // Create a new room\n      const newRoom = new Room({\n        adaptiveStream: true,\n        dynacast: true,\n        publishDefaults: {\n          simulcast: true,\n          audioEnabled: isMicrophoneActive,\n        },\n      });\n      \n      // Set up event listeners\n      newRoom.on(RoomEvent.ParticipantConnected, (participant) => {\n        addMessage('System', `${participant.identity} joined the room`);\n      });\n      \n      newRoom.on(RoomEvent.ParticipantDisconnected, (participant) => {\n        addMessage('System', `${participant.identity} left the room`);\n      });\n      \n      newRoom.on(RoomEvent.Disconnected, () => {\n        setConnectionState('disconnected');\n        addMessage('System', 'Disconnected from room');\n      });\n      \n      newRoom.on(RoomEvent.TrackSubscribed, (track, publication, participant) => {\n        addMessage('System', `Subscribed to ${track.kind} track from ${participant.identity}`);\n        \n        // Attach audio track to audio element\n        if (track.kind === 'audio') {\n          const audioElement = document.createElement('audio');\n          audioElement.id = `audio-${participant.identity}-${track.sid}`;\n          audioElement.autoplay = true;\n          document.getElementById('audio-container').appendChild(audioElement);\n          track.attach(audioElement);\n        }\n      });\n      \n      // Connect to the room\n      await newRoom.connect('wss://robiassistant-f38d9mhx.livekit.cloud', currentToken);\n      setRoom(newRoom);\n      setConnectionState('connected');\n      addMessage('System', 'Connected to room. You can now speak with the agent.');\n      \n      // Enable microphone if needed\n      if (isMicrophoneActive) {\n        await newRoom.localParticipant.setMicrophoneEnabled(true);\n      }\n      \n    } catch (e) {\n      console.error('Connection error:', e);\n      setConnectionState('disconnected');\n      addMessage('System', `Connection error: ${e.message}`);\n    }\n  };\n\n  const handleDisconnect = () => {\n    if (room) {\n      room.disconnect();\n      setRoom(null);\n    }\n    setConnectionState('disconnected');\n  };\n\n  const toggleMicrophone = async () => {\n    const newState = !isMicrophoneActive;\n    setIsMicrophoneActive(newState);\n    \n    if (room && room.localParticipant) {\n      try {\n        await room.localParticipant.setMicrophoneEnabled(newState);\n        addMessage('System', newState ? 'Microphone enabled' : 'Microphone disabled');\n      } catch (e) {\n        console.error('Error toggling microphone:', e);\n        addMessage('System', `Error toggling microphone: ${e.message}`);\n      }\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <h1 className=\"title\">LiveKit Voice Agent</h1>\n        <h2 className=\"subtitle\">Talk with an AI voice assistant</h2>\n      </div>\n\n      <div className=\"card\">\n        <div className=\"room-controls\">\n          <div>\n            <label htmlFor=\"room-name\">Room Name: </label>\n            <input\n              id=\"room-name\"\n              type=\"text\"\n              value={roomName}\n              onChange={(e) => setRoomName(e.target.value)}\n              disabled={connectionState === 'connected'}\n            />\n          </div>\n          \n          <div className=\"controls\">\n            {connectionState !== 'connected' ? (\n              <button \n                className=\"button\" \n                onClick={handleConnect}\n                disabled={connectionState === 'connecting'}\n              >\n                {connectionState === 'connecting' ? 'Connecting...' : 'Connect'}\n              </button>\n            ) : (\n              <>\n                <button \n                  className=\"button\" \n                  onClick={toggleMicrophone}\n                >\n                  {isMicrophoneActive ? 'Mute Microphone' : 'Unmute Microphone'}\n                </button>\n                <button \n                  className=\"button\" \n                  onClick={handleDisconnect}\n                >\n                  Disconnect\n                </button>\n              </>\n            )}\n          </div>\n          \n          <div className={`status ${connectionState}`}>\n            Status: {connectionState.charAt(0).toUpperCase() + connectionState.slice(1)}\n          </div>\n        </div>\n      </div>\n\n      <div id=\"audio-container\" style={{ display: 'none' }}></div>\n\n      <div className=\"card\">\n        <h3>Conversation</h3>\n        <div className=\"transcript\">\n          {messages.length === 0 ? (\n            <p>No messages yet. Connect to the room and start speaking.</p>\n          ) : (\n            messages.map((msg, idx) => (\n              <div \n                key={idx} \n                className={`message ${msg.sender.toLowerCase() === 'user' ? 'user' : \n                             msg.sender.toLowerCase() === 'agent' ? 'agent' : ''}`}\n              >\n                <div className=\"message-sender\">{msg.sender}</div>\n                <p className=\"message-text\">{msg.text}</p>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}