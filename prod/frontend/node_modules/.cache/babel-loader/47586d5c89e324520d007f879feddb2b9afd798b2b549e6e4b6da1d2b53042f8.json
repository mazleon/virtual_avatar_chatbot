{"ast":null,"code":"var _jsxFileName = \"/Users/saniyasultanatuba/Downloads/Python-dev/llm/video_agent/prod/frontend/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { LiveKitRoom, VideoTrack, AudioTrack, useParticipant, useRoom, RoomEvent, ConnectionState, LocalParticipant, RemoteParticipant, Track } from 'livekit-client';\nimport '@livekit/components-styles';\n\n// Token server URL - in a production app, this would be your backend endpoint\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TOKEN_SERVER_URL = 'http://localhost:8000/get-token';\nfunction App() {\n  _s();\n  const [roomName, setRoomName] = useState('agent-room');\n  const [token, setToken] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [connectionState, setConnectionState] = useState('disconnected');\n  const [messages, setMessages] = useState([]);\n  const [isMicrophoneActive, setIsMicrophoneActive] = useState(false);\n\n  // Generate a temporary token for testing\n  // In production, you would get this from your server\n  useEffect(() => {\n    const generateDemoToken = async () => {\n      try {\n        // For demo purposes, we're using a hardcoded token\n        // In production, you should fetch this from your server\n        const demoToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MTY2NzY4MDAsImlzcyI6ImRldmtleSIsIm5hbWUiOiJVc2VyIiwibmJmIjoxNzE2NTkwNDAwLCJzdWIiOiJ1c2VyIiwidmlkZW8iOnsicm9vbSI6InZvaWNlLWFnZW50LXJvb20iLCJyb29tSm9pbiI6dHJ1ZX19.YVRGwbwrCzHCMwLBgEAO9jVzq3UBtQqbwGMoR9VjCvA';\n        setToken(demoToken);\n      } catch (e) {\n        console.error('Error generating token:', e);\n      }\n    };\n    generateDemoToken();\n  }, [roomName]);\n  const handleConnect = () => {\n    setConnectionState('connecting');\n  };\n  const handleDisconnect = () => {\n    setIsConnected(false);\n    setConnectionState('disconnected');\n  };\n  const toggleMicrophone = () => {\n    setIsMicrophoneActive(!isMicrophoneActive);\n  };\n  const addMessage = (sender, text) => {\n    setMessages(prev => [...prev, {\n      sender,\n      text,\n      timestamp: new Date()\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"LiveKit Voice Agent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"subtitle\",\n        children: \"Talk with an AI voice assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"room-name\",\n            children: \"Room Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"room-name\",\n            type: \"text\",\n            value: roomName,\n            onChange: e => setRoomName(e.target.value),\n            disabled: isConnected\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: !isConnected ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: handleConnect,\n            disabled: !token || connectionState === 'connecting',\n            children: connectionState === 'connecting' ? 'Connecting...' : 'Connect'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button\",\n              onClick: toggleMicrophone,\n              children: isMicrophoneActive ? 'Mute Microphone' : 'Unmute Microphone'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button\",\n              onClick: handleDisconnect,\n              children: \"Disconnect\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `status ${connectionState}`,\n          children: [\"Status: \", connectionState.charAt(0).toUpperCase() + connectionState.slice(1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), token && /*#__PURE__*/_jsxDEV(LiveKitRoom, {\n      url: \"ws://localhost:7880\",\n      token: token,\n      onConnected: () => {\n        setIsConnected(true);\n        setConnectionState('connected');\n        addMessage('System', 'Connected to room. You can now speak with the agent.');\n      },\n      onDisconnected: () => {\n        setIsConnected(false);\n        setConnectionState('disconnected');\n        addMessage('System', 'Disconnected from room.');\n      },\n      connectOptions: {\n        autoSubscribe: true\n      },\n      roomOptions: {\n        adaptiveStream: true,\n        dynacast: true,\n        publishDefaults: {\n          simulcast: true,\n          audioEnabled: isMicrophoneActive\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(RoomControls, {\n        isMicrophoneActive: isMicrophoneActive,\n        onMicrophoneToggle: toggleMicrophone,\n        onAddMessage: addMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Conversation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcript\",\n        children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No messages yet. Connect to the room and start speaking.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this) : messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.sender.toLowerCase() === 'user' ? 'user' : msg.sender.toLowerCase() === 'agent' ? 'agent' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-sender\",\n            children: msg.sender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"message-text\",\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Hk7vgs17lS/Z6qDLCXoOeBzCcu4=\");\n_c = App;\nfunction RoomControls({\n  isMicrophoneActive,\n  onMicrophoneToggle,\n  onAddMessage\n}) {\n  _s2();\n  const room = useRoom();\n  useEffect(() => {\n    if (!room) return;\n\n    // Enable/disable local audio based on microphone state\n    room.localParticipant.setMicrophoneEnabled(isMicrophoneActive);\n\n    // Listen for data messages from the agent\n    room.on(RoomEvent.DataReceived, (payload, participant) => {\n      if (participant.identity === 'agent') {\n        try {\n          const data = JSON.parse(new TextDecoder().decode(payload));\n          if (data.type === 'transcript') {\n            onAddMessage('Agent', data.text);\n          }\n        } catch (e) {\n          console.error('Error parsing data message:', e);\n        }\n      }\n    });\n    return () => {\n      room.off(RoomEvent.DataReceived);\n    };\n  }, [room, isMicrophoneActive, onAddMessage]);\n\n  // Handle remote participants (including the agent)\n  const remoteParticipants = useRemoteParticipants(onAddMessage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: remoteParticipants\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n}\n_s2(RoomControls, \"rwNjU1r4eb6F/4k+f8bQM5cv6FM=\", false, function () {\n  return [useRoom, useRemoteParticipants];\n});\n_c2 = RoomControls;\nfunction useRemoteParticipants(onAddMessage) {\n  _s3();\n  const room = useRoom();\n  const [participants, setParticipants] = useState([]);\n  useEffect(() => {\n    if (!room) return;\n    const handleParticipantConnected = participant => {\n      setParticipants(prev => [...prev, participant]);\n      onAddMessage('System', `${participant.identity} joined the room`);\n    };\n    const handleParticipantDisconnected = participant => {\n      setParticipants(prev => prev.filter(p => p.sid !== participant.sid));\n      onAddMessage('System', `${participant.identity} left the room`);\n    };\n\n    // Set initial participants\n    setParticipants(Array.from(room.participants.values()));\n\n    // Listen for participant changes\n    room.on(RoomEvent.ParticipantConnected, handleParticipantConnected);\n    room.on(RoomEvent.ParticipantDisconnected, handleParticipantDisconnected);\n    return () => {\n      room.off(RoomEvent.ParticipantConnected, handleParticipantConnected);\n      room.off(RoomEvent.ParticipantDisconnected, handleParticipantDisconnected);\n    };\n  }, [room, onAddMessage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: participants.map(participant => /*#__PURE__*/_jsxDEV(RemoteParticipantView, {\n      participant: participant,\n      onAddMessage: onAddMessage\n    }, participant.sid, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n}\n_s3(useRemoteParticipants, \"IfevXldv3uTcjZYTUkf16x5j5Qg=\", false, function () {\n  return [useRoom];\n});\nfunction RemoteParticipantView({\n  participant,\n  onAddMessage\n}) {\n  _s4();\n  const {\n    audioTracks\n  } = useParticipant(participant);\n\n  // Render audio tracks\n  const audioElements = audioTracks.map(track => /*#__PURE__*/_jsxDEV(AudioTrack, {\n    track: track\n  }, track.sid, false, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: audioElements\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 5\n  }, this);\n}\n_s4(RemoteParticipantView, \"YIledDMzejMkr9ixTZQGA6V6THM=\", false, function () {\n  return [useParticipant];\n});\n_c3 = RemoteParticipantView;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"RoomControls\");\n$RefreshReg$(_c3, \"RemoteParticipantView\");","map":{"version":3,"names":["React","useState","useEffect","LiveKitRoom","VideoTrack","AudioTrack","useParticipant","useRoom","RoomEvent","ConnectionState","LocalParticipant","RemoteParticipant","Track","jsxDEV","_jsxDEV","Fragment","_Fragment","TOKEN_SERVER_URL","App","_s","roomName","setRoomName","token","setToken","isConnected","setIsConnected","connectionState","setConnectionState","messages","setMessages","isMicrophoneActive","setIsMicrophoneActive","generateDemoToken","demoToken","e","console","error","handleConnect","handleDisconnect","toggleMicrophone","addMessage","sender","text","prev","timestamp","Date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","value","onChange","target","disabled","onClick","charAt","toUpperCase","slice","url","onConnected","onDisconnected","connectOptions","autoSubscribe","roomOptions","adaptiveStream","dynacast","publishDefaults","simulcast","audioEnabled","RoomControls","onMicrophoneToggle","onAddMessage","length","map","msg","idx","toLowerCase","_c","_s2","room","localParticipant","setMicrophoneEnabled","on","DataReceived","payload","participant","identity","data","JSON","parse","TextDecoder","decode","off","remoteParticipants","useRemoteParticipants","_c2","_s3","participants","setParticipants","handleParticipantConnected","handleParticipantDisconnected","filter","p","sid","Array","from","values","ParticipantConnected","ParticipantDisconnected","RemoteParticipantView","_s4","audioTracks","audioElements","track","_c3","$RefreshReg$"],"sources":["/Users/saniyasultanatuba/Downloads/Python-dev/llm/video_agent/prod/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  LiveKitRoom,\n  VideoTrack,\n  AudioTrack,\n  useParticipant,\n  useRoom,\n  RoomEvent,\n  ConnectionState,\n  LocalParticipant,\n  RemoteParticipant,\n  Track\n} from 'livekit-client';\nimport '@livekit/components-styles';\n\n// Token server URL - in a production app, this would be your backend endpoint\nconst TOKEN_SERVER_URL = 'http://localhost:8000/get-token';\n\nfunction App() {\n  const [roomName, setRoomName] = useState('agent-room');\n  const [token, setToken] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [connectionState, setConnectionState] = useState('disconnected');\n  const [messages, setMessages] = useState([]);\n  const [isMicrophoneActive, setIsMicrophoneActive] = useState(false);\n\n  // Generate a temporary token for testing\n  // In production, you would get this from your server\n  useEffect(() => {\n    const generateDemoToken = async () => {\n      try {\n        // For demo purposes, we're using a hardcoded token\n        // In production, you should fetch this from your server\n        const demoToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MTY2NzY4MDAsImlzcyI6ImRldmtleSIsIm5hbWUiOiJVc2VyIiwibmJmIjoxNzE2NTkwNDAwLCJzdWIiOiJ1c2VyIiwidmlkZW8iOnsicm9vbSI6InZvaWNlLWFnZW50LXJvb20iLCJyb29tSm9pbiI6dHJ1ZX19.YVRGwbwrCzHCMwLBgEAO9jVzq3UBtQqbwGMoR9VjCvA';\n        setToken(demoToken);\n      } catch (e) {\n        console.error('Error generating token:', e);\n      }\n    };\n\n    generateDemoToken();\n  }, [roomName]);\n\n  const handleConnect = () => {\n    setConnectionState('connecting');\n  };\n\n  const handleDisconnect = () => {\n    setIsConnected(false);\n    setConnectionState('disconnected');\n  };\n\n  const toggleMicrophone = () => {\n    setIsMicrophoneActive(!isMicrophoneActive);\n  };\n\n  const addMessage = (sender, text) => {\n    setMessages(prev => [...prev, { sender, text, timestamp: new Date() }]);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <h1 className=\"title\">LiveKit Voice Agent</h1>\n        <h2 className=\"subtitle\">Talk with an AI voice assistant</h2>\n      </div>\n\n      <div className=\"card\">\n        <div className=\"room-controls\">\n          <div>\n            <label htmlFor=\"room-name\">Room Name: </label>\n            <input\n              id=\"room-name\"\n              type=\"text\"\n              value={roomName}\n              onChange={(e) => setRoomName(e.target.value)}\n              disabled={isConnected}\n            />\n          </div>\n          \n          <div className=\"controls\">\n            {!isConnected ? (\n              <button \n                className=\"button\" \n                onClick={handleConnect}\n                disabled={!token || connectionState === 'connecting'}\n              >\n                {connectionState === 'connecting' ? 'Connecting...' : 'Connect'}\n              </button>\n            ) : (\n              <>\n                <button \n                  className=\"button\" \n                  onClick={toggleMicrophone}\n                >\n                  {isMicrophoneActive ? 'Mute Microphone' : 'Unmute Microphone'}\n                </button>\n                <button \n                  className=\"button\" \n                  onClick={handleDisconnect}\n                >\n                  Disconnect\n                </button>\n              </>\n            )}\n          </div>\n          \n          <div className={`status ${connectionState}`}>\n            Status: {connectionState.charAt(0).toUpperCase() + connectionState.slice(1)}\n          </div>\n        </div>\n      </div>\n\n      {token && (\n        <LiveKitRoom\n          url=\"ws://localhost:7880\"\n          token={token}\n          onConnected={() => {\n            setIsConnected(true);\n            setConnectionState('connected');\n            addMessage('System', 'Connected to room. You can now speak with the agent.');\n          }}\n          onDisconnected={() => {\n            setIsConnected(false);\n            setConnectionState('disconnected');\n            addMessage('System', 'Disconnected from room.');\n          }}\n          connectOptions={{ autoSubscribe: true }}\n          roomOptions={{\n            adaptiveStream: true,\n            dynacast: true,\n            publishDefaults: {\n              simulcast: true,\n              audioEnabled: isMicrophoneActive,\n            },\n          }}\n        >\n          <RoomControls \n            isMicrophoneActive={isMicrophoneActive} \n            onMicrophoneToggle={toggleMicrophone}\n            onAddMessage={addMessage}\n          />\n        </LiveKitRoom>\n      )}\n\n      <div className=\"card\">\n        <h3>Conversation</h3>\n        <div className=\"transcript\">\n          {messages.length === 0 ? (\n            <p>No messages yet. Connect to the room and start speaking.</p>\n          ) : (\n            messages.map((msg, idx) => (\n              <div \n                key={idx} \n                className={`message ${msg.sender.toLowerCase() === 'user' ? 'user' : \n                             msg.sender.toLowerCase() === 'agent' ? 'agent' : ''}`}\n              >\n                <div className=\"message-sender\">{msg.sender}</div>\n                <p className=\"message-text\">{msg.text}</p>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction RoomControls({ isMicrophoneActive, onMicrophoneToggle, onAddMessage }) {\n  const room = useRoom();\n  \n  useEffect(() => {\n    if (!room) return;\n    \n    // Enable/disable local audio based on microphone state\n    room.localParticipant.setMicrophoneEnabled(isMicrophoneActive);\n    \n    // Listen for data messages from the agent\n    room.on(RoomEvent.DataReceived, (payload, participant) => {\n      if (participant.identity === 'agent') {\n        try {\n          const data = JSON.parse(new TextDecoder().decode(payload));\n          if (data.type === 'transcript') {\n            onAddMessage('Agent', data.text);\n          }\n        } catch (e) {\n          console.error('Error parsing data message:', e);\n        }\n      }\n    });\n    \n    return () => {\n      room.off(RoomEvent.DataReceived);\n    };\n  }, [room, isMicrophoneActive, onAddMessage]);\n  \n  // Handle remote participants (including the agent)\n  const remoteParticipants = useRemoteParticipants(onAddMessage);\n  \n  return (\n    <div>\n      {remoteParticipants}\n    </div>\n  );\n}\n\nfunction useRemoteParticipants(onAddMessage) {\n  const room = useRoom();\n  const [participants, setParticipants] = useState([]);\n  \n  useEffect(() => {\n    if (!room) return;\n    \n    const handleParticipantConnected = (participant) => {\n      setParticipants(prev => [...prev, participant]);\n      onAddMessage('System', `${participant.identity} joined the room`);\n    };\n    \n    const handleParticipantDisconnected = (participant) => {\n      setParticipants(prev => prev.filter(p => p.sid !== participant.sid));\n      onAddMessage('System', `${participant.identity} left the room`);\n    };\n    \n    // Set initial participants\n    setParticipants(Array.from(room.participants.values()));\n    \n    // Listen for participant changes\n    room.on(RoomEvent.ParticipantConnected, handleParticipantConnected);\n    room.on(RoomEvent.ParticipantDisconnected, handleParticipantDisconnected);\n    \n    return () => {\n      room.off(RoomEvent.ParticipantConnected, handleParticipantConnected);\n      room.off(RoomEvent.ParticipantDisconnected, handleParticipantDisconnected);\n    };\n  }, [room, onAddMessage]);\n  \n  return (\n    <div>\n      {participants.map(participant => (\n        <RemoteParticipantView \n          key={participant.sid} \n          participant={participant}\n          onAddMessage={onAddMessage}\n        />\n      ))}\n    </div>\n  );\n}\n\nfunction RemoteParticipantView({ participant, onAddMessage }) {\n  const { audioTracks } = useParticipant(participant);\n  \n  // Render audio tracks\n  const audioElements = audioTracks.map(track => (\n    <AudioTrack key={track.sid} track={track} />\n  ));\n  \n  return (\n    <div>\n      {audioElements}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}